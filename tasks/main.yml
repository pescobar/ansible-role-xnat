---

- name: Make sure the XNAT group exists
  ansible.builtin.group:
    name: "{{ xnat_group }}"
    state: present

- name: Make sure the XNAT user exists
  ansible.builtin.user:
    name: "{{ xnat_user }}"
    state: present

- name: Create XNAT top folder
  file:
    path: "{{ xnat_top_folder }}"
    owner: "{{ xnat_user }}"
    group: "{{ xnat_group }}"
    state: directory
    mode: 0755

- name: Create main xnat folders
  file:
    path: "{{ xnat_top_folder }}/{{ item }}"
    owner: "{{ xnat_user }}"
    group: "{{ xnat_group }}"
    state: directory
    mode: 0755
  become: yes
  become_user: "{{ xnat_user }}"
  loop: "{{ xnat_sub_folders }}"

- name: Copy the XNAT config file
  template:
    src: xnat-conf.properties.j2
    dest: "{{ xnat_top_folder }}/home/config/xnat-conf.properties"
    owner: "{{ xnat_user }}"
    group: "{{ xnat_group }}"
    mode: 0644
  become: yes
  become_user: "{{ xnat_user }}"

- name: Copy the XNAT prefs-init.ini config file
  template:
    src: xnat-prefs-init.ini.j2
    dest: "{{ xnat_top_folder }}/home/config/prefs-init.ini"
    owner: "{{ xnat_user }}"
    group: "{{ xnat_group }}"
    mode: 0644
  become: yes
  become_user: "{{ xnat_user }}"

- name: Download the XNAT war file to tomcat folder
  get_url:
    url: "{{ xnat_war_file_download_url }}"
    dest: "{{ xnat_tomcat_webapps_path }}/ROOT.war"
    owner: "{{ xnat_user }}"
    group: "{{ xnat_group }}"

- name: Download the xnat-pipeline-engine git repo
  unarchive:
    src: "{{ xnat_pipeline_engine_download_url }}"
    dest: "{{ xnat_top_folder }}/pipeline/"
    remote_src: yes
    creates: "{{ xnat_top_folder }}/pipeline/gradlew"
    extra_opts: [--strip-components=1]
  become: yes
  become_user: "{{ xnat_user }}"

- name: Deploy the xnat-pipeline config file
  template:
    src: gradle.properties.j2
    dest: "{{ xnat_top_folder }}/pipeline/gradle.properties"
    owner: "{{ xnat_user }}"
    group: "{{ xnat_group }}"
    mode: 0644
  become: yes
  become_user: "{{ xnat_user }}"

- name: Modify the gradle config files to use a internal proxy
  block:

    - name: Replace url "http://maven.imagej.net/content/groups/public" by our proxy url
      ansible.builtin.replace:
        path: "{{ xnat_top_folder }}/pipeline/build.gradle"
        regexp: 'http\:\/\/maven.imagej.net\/content\/groups\/public'
        replace: "{{ xnat_gradle_proxy_url }}"
      become: yes
      become_user: "{{ xnat_user }}"

    - name: Replace url "https://nrgxnat.jfrog.io/nrgxnat/libs-release" by our proxy url
      ansible.builtin.replace:
        path: "{{ xnat_top_folder }}/pipeline/build.gradle"
        regexp: 'https\:\/\/nrgxnat.jfrog.io\/nrgxnat\/libs-release'
        replace: "{{ xnat_gradle_proxy_url }}"
      become: yes
      become_user: "{{ xnat_user }}"

    - name: Replace url "https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot" by our proxy url
      ansible.builtin.replace:
        path: "{{ xnat_top_folder }}/pipeline/build.gradle"
        regexp: 'https\:\/\/nrgxnat.jfrog.io\/nrgxnat\/libs-snapshot'
        replace: "{{ xnat_gradle_proxy_url }}"
      become: yes
      become_user: "{{ xnat_user }}"

    - name: Replace url "https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot" by our proxy url
      ansible.builtin.replace:
        path: "{{ xnat_top_folder }}/pipeline/gradle/wrapper/gradle-wrapper.properties"
        regexp: 'https\\:\/\/services.gradle.org\/distributions'
        replace: "{{ xnat_gradle_proxy_url }}"
      become: yes
      become_user: "{{ xnat_user }}"

    - name: Edit settings.gradle to user our proxy
      ansible.builtin.blockinfile:
        path: "{{ xnat_top_folder }}/pipeline/settings.gradle"
        marker: "/* {mark} ANSIBLE MANAGED BLOCK */"
        insertbefore: 'rootProject.name'
        block: |
          pluginManagement {
              repositories {
                  maven {
                      url '{{ xnat_gradle_proxy_url }}'
                  }
              }
          }
      become: yes
      become_user: "{{ xnat_user }}"

  when: xnat_gradle_proxy_url is defined | default('false')


- name: Install the xnat-pipeline
  command: ./gradlew
  args:
    chdir: "{{ xnat_top_folder }}/pipeline"
    creates: "{{ xnat_top_folder }}/pipeline/pipeline.config"
  become: yes
  become_user: "{{ xnat_user }}"
